Highcharts.setOptions({lang:{thousandsSep:","}});let chartIdSeptJobs=document.getElementById("chart-container-sept-jobs");function drawHighcharts(){Highcharts.chart(chartIdSeptJobs,{chart:{type:"column",styledMode:!0,spacingBottom:25,spacingRight:100,spacingLeft:0,spacingTop:20},title:{text:null},data:{googleSpreadsheetKey:"1r5SdkE-cFhYYmTekngzvwuDYWIdL-c_g9uk74cDMQhI"},plotOptions:{series:{groupPadding:.1}},legend:{enabled:!1},xAxis:{labels:{style:{whiteSpace:"nowrap"}},tickLength:5},yAxis:{title:!1,labels:{useHTML:!0,overflow:"allow"},min:-25e6,max:1e7,tickAmount:8},credits:{enabled:!1},tooltip:{shadow:!1,padding:10},annotations:[{labels:[{point:{xAxis:0,yAxis:0,x:1598973344e3,y:661e3},text:"+661,000",align:"center",y:-10,x:0,padding:0}]}],responsive:{rules:[{condition:{maxWidth:500},chartOptions:{chart:{spacingRight:10},legend:{align:"left",x:-18},tooltip:{enabled:!1}}}]}})}setTimeout(function(){if(""===chartIdSeptJobs.innerHTML){let e=document.getElementsByClassName("chart-area-sept-jobs");for(var t=0;t<e.length;t++)e[t].style.display="none";document.getElementById("chart-fallback").innerHTML+='<img src="https://fm-static.cnbc.com/awsmedia/chart/2019/10/08/chart-error_wide.1570569331252.png" style="width: 100%;max-width:660px">'}},500),"complete"===document.readyState||"interactive"===document.readyState?drawHighcharts():document.addEventListener("DOMContentLoaded",drawHighcharts);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
